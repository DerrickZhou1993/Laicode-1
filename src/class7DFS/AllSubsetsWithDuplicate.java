package class7DFS;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * @author yifengguo
 */

/*
 * basic idea: add a or not
 * sort the char array generated by input string
 * and then convert it to AllSubset problem
 */
public class AllSubsetsWithDuplicate {
    public List<String> subSets(String set) {
        List<String> result = new ArrayList<>();
        if (set == null) {
            return result;
        }
        StringBuilder sb = new StringBuilder();
        char[] arr = set.toCharArray();
        Arrays.sort(arr);
        helper(arr, result, sb, 0);
        return result;
    }

    private void helper(char[] arr, List<String> result, StringBuilder sb, int level) {
        // base case
        if (level == arr.length) {
            result.add(sb.toString());
            return;
        }
        // because the char array is already sorted
        // after backtracking to last state, if find that
        // next char == previous added char, skip it to de-duplicate
        helper(arr, result, sb.append(arr[level]), level + 1);
        sb.deleteCharAt(sb.length() - 1);
        while (level < arr.length - 1 && arr[level] == arr[level + 1]) {
            level++;
        }
        helper(arr, result, sb, level + 1);
    }
}